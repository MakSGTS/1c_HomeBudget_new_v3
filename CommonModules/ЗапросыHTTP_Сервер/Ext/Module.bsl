
#Область ИнициализацияПараметров
Функция ИнициализироватьПараметрыПодключения(Сервер, ИспользоватьSSL = Ложь)
	Параметры = Новый Структура("Сервер, Порт, ИмяПользователя, Пароль, Прокси, Таймаут, ЗащищенноеСоединение");
	Параметры.Сервер = Сервер;
	Параметры.Порт = ?(ИспользоватьSSL, 443, 80);
	Параметры.ИмяПользователя = "";
	Параметры.Пароль = "";
	Параметры.Прокси = Новый ИнтернетПрокси;
	Параметры.Таймаут = 30;
	Параметры.ЗащищенноеСоединение = ?(ИспользоватьSSL, Новый ЗащищенноеСоединениеOpenSSL, Неопределено);
	
	Возврат Параметры;
КонецФункции

Функция ИнициализироватьПараметрыЗапроса(АдресСкрипта)
	Параметры = Новый Структура("Метод, ЗапросHTTP, АдресСкрипта");
	Параметры.Метод = "";
	Параметры.ЗапросHTTP = Новый HTTPЗапрос(АдресСкрипта, Новый Соответствие);
	Параметры.АдресСкрипта = АдресСкрипта;
	
	Возврат Параметры;
КонецФункции

#КонецОбласти

#Область ОтправкаЛогов
Функция ОтправитьЛогиВДатаЦентр(Знач Данные = Неопределено, ОбработатьЛогиПослеВыгрузки = Ложь) Экспорт
	//СборСтатистикиСервер.ЗаписатьФактИспользованияСервиса(ПредопределенноеЗначение("Перечисление.ВидыСтатистики.ОтправкаЛогов"));   //TODO - включить после внедрения СбораСтатистики
	СтруктураВозврата = Новый Структура("ОтправленоУдачно, Ошибка", Ложь, "");
	
	Если Не ЗначениеЗаполнено(Данные) Тогда
		ДанныеДляОтправки = ВыгрузкаДанныхСервер.ПолучитьДанныеЛоговДляВыгрузки();
		ОбработатьЛогиПослеВыгрузки = Истина;
	ИначеЕсли ТипЗнч(Данные) = Тип("Структура") Тогда
		ДанныеДляОтправки = XMLСтрока(ВыгрузкаДанныхСервер.ПреобразоватьДанныеСтрокаВХранилище(Данные));
		ОбработатьЛогиПослеВыгрузки = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДанныеДляОтправки) Тогда
		ДиалогиСПользователямиСервер.ПоказатьСообщениеПользователю("Нет данных для выгрузки");
		СтруктураВозврата.Ошибка = "Нет данных для выгрузки";
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	АдресСкрипта = "HomeBudget_backUp/hs/download_log_info/";
	
	ПараметрыПодключения = ИнициализироватьПараметрыПодключения("192.168.1.140");
	ПараметрыЗапроса = ИнициализироватьПараметрыЗапроса(АдресСкрипта);
	
	ПараметрыЗапроса.Метод = "POST";
	
	ПараметрыПодключения.ИмяПользователя = "service";  //TODO: Сделать получение служебных учётных данных
	ПараметрыПодключения.Пароль = "hr65kl81";
	
	ssl = Новый ЗащищенноеСоединениеOpenSSL;	
	
	ПараметрыЗапроса.ЗапросHTTP.Заголовки.Вставить("Content-Type", "multipart/form-data");
	
	РазмерФайлаОтправки = XMLСтрока(СтрДлина(ДанныеДляОтправки));
	ПараметрыЗапроса.ЗапросHTTP.Заголовки.Вставить("Content-Length", РазмерФайлаОтправки);
	
	ОтветHTTP = ВыполнитьHTTTP_Запрос(ПараметрыПодключения, ПараметрыЗапроса, Истина, Истина, ДанныеДляОтправки, Истина);
	
	Если ОтветHTTP = Неопределено Тогда
		СтруктураВозврата.ОтправленоУдачно = Ложь;
		СтруктураВозврата.Ошибка = "Не удалось отправить логи.";
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	Сообщение = Новый СообщениеПользователю;
	
	Текст = ОтветHTTP.ПолучитьТелоКакСтроку("utf-8");
	
	Если ОтветHTTP.КодСостояния = 200 Тогда			
		
		СтруктураВозврата.ОтправленоУдачно = Истина;
		
	Иначе
		ОбщиеПроцедурыИФункцииСервер.ЗаписатьЛоги(Текст);
		
		СтруктураВозврата.ОтправленоУдачно = Ложь;
		СтруктураВозврата.Ошибка = Текст;
	КонецЕсли;
	
	Если ОтветHTTP.КодСостояния = 200 И ОбработатьЛогиПослеВыгрузки Тогда
		РегистрыСведений.ЛогиОшибок.ОбработатьЛогиПослеВыгрузки(ДанныеДляОтправки);		
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции

#КонецОбласти

Функция ВыполнитьHTTTP_Запрос(ПараметрыПодключения, ПараметрыЗапроса, ПоказатьСообщение = Истина, УстановитьТело = Ложь, ТелоЗапроса = Неопределено, ТелоСтрока = Ложь) Экспорт
	
	ХТТП = Новый HTTPСоединение(ПараметрыПодключения.Сервер,, ПараметрыПодключения.ИмяПользователя, ПараметрыПодключения.Пароль);
	Попытка
		ЗапросHTTP = ПараметрыЗапроса.ЗапросHTTP;
		Если УстановитьТело И ТелоЗапроса <> Неопределено Тогда
			Если ТелоСтрока Тогда
				ЗапросHTTP.УстановитьТелоИзСтроки(ТелоЗапроса);
			Иначе
				ЗапросHTTP.УстановитьТелоИзДвоичныхДанных(ТелоЗапроса);
			КонецЕсли;
		КонецЕсли;
		
		Возврат ХТТП.ВызватьHTTPМетод(ПараметрыЗапроса.Метод, ЗапросHTTP);
		
	Исключение
		Текст = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ОбщиеПроцедурыИФункцииСервер.ЗаписатьЛоги(Текст);
		
		Если ПоказатьСообщение Тогда 
			//ДиалогиСПользователемКлиент.ОбработатьИнформациюОбОшибкеДляПользователя(Текст);    //TODO - разобраться
		КонецЕсли;
		
		Возврат Неопределено;
		
	КонецПопытки;

КонецФункции



