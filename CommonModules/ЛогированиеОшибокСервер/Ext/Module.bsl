
#Область ПрограммныйИнтерфейс

// Записать ошибку в логи.
// 
// Параметры:
//  ТекстОшибки - Строка
//  СтруктураДанных - Структура
//  ОтправитьНаСервер - Булево - Отправить на сервер
//  Важность - ПеречислениеСсылка.КритерииОшибок
Процедура ЗаписатьОшибкуВЛоги(ТекстОшибки, СтруктураДанных = Неопределено, ОтправитьНаСервер = Истина, Важность = Неопределено) Экспорт
	РегистрыСведений.ЛогиОшибок.ЗаписатьОшибкуВЛоги(ТекстОшибки, СтруктураДанных, ОтправитьНаСервер, Важность);
КонецПроцедуры

Функция ПодготовитьИнформацибОбОшибке(ТекстОшибки, Отправлено = Ложь, Важность = Неопределено) Экспорт
	Возврат РегистрыСведений.ЛогиОшибок.ПодготовитьИнформацибОбОшибке(ТекстОшибки, Отправлено, Важность);
КонецФункции

Функция ОбработатьЛогиПослеВыгрузки(Данные) Экспорт
	РегистрыСведений.ЛогиОшибок.ОбработатьЛогиПослеВыгрузки(Данные);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьДанныеЛоговДляВыгрузки() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ *
	               |ИЗ
	               |	РегистрСведений.ЛогиОшибок КАК ЛогиОшибок
	               |ГДЕ
	               |	НЕ ЛогиОшибок.Отправлено";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ХЗ = Новый ХранилищеЗначения(РезультатЗапроса.Выгрузить(), Новый СжатиеДанных(9));
		Данные = XMLСтрока(ХЗ);
		Возврат Данные;
	Иначе
		Возврат "";
	КонецЕсли;

КонецФункции

#КонецОбласти



