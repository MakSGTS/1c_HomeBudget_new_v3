
&НаКлиенте
Процедура Зарегистрировать(Команда)
	НаличиеЛогина = ПроверитьЛогинВБазе(Логин);
	
	Если НаличиеЛогина Тогда
		Текст = СтрШаблон("Имя учетной записи %1 уже было вами зарегестрировано", Логин);
		ДиалогиСПользователемКлиент.ПоказатьСообщениеПользователю(Текст);
		Возврат;
	КонецЕсли;
	
	СтруктураУчетнойЗаписи = УпаковатьУчетныеДанные(Логин, Пароль);
	
	Успешно = РегистрацияПользователяСервер(СтруктураУчетнойЗаписи);
	Если Успешно Тогда
		ДиалогиСПользователемКлиент.ПоказатьСообщениеПользователю("Учётная запись создано успешно");
	Иначе
		ДиалогиСПользователемКлиент.ПоказатьСообщениеПользователю("Не удалось создать учётную запись. Попробуйте ещё раз...");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РегистрацияПользователяСервер(УчетнаяЗапись)
	Результат = ЗапросыHTTP_Сервер.СоздатьНовогоПользователя(УчетнаяЗапись);
	Если Результат.РегистрацияУспешно Тогда
		ЗаписатьДанныеУчетнойЗаписи(УчетнаяЗапись.Логин, УчетнаяЗапись.Пароль, Результат.id_user);
		Возврат Истина;
	Иначе
		//TODO: обработать ответ сервера в случае неудачи. На сервере аналогично сделать отправку соответствующей ошибки
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ПарольОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	//ПроверитьПароли(Текст);
КонецПроцедуры

&НаКлиенте
Процедура ПарольДубльОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ПроверитьПароли(ПарольДубль);
КонецПроцедуры

&наКлиенте
Процедура ПроверитьПароли(Пароль)
	Если ОбщиеПроцедурыИФункцииКлиент.ПроверитьКорректностьСимволовПароля(Пароль) Тогда
		УстановитьДоступностьЭлементов();
	Иначе		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Пароль содержит запрещённые символы!";
		Сообщение.Сообщить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементов()
	Элементы.Зарегистрировать.Доступность = Пароль = ПарольДубль И ЗначениеЗаполнено(Логин);
	Если Пароль = ПарольДубль Тогда
		Элементы.ПарольДубль.ЦветФона = WebЦвета.СветлоЗеленый;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
	ПроверитьПароли(Пароль);
КонецПроцедуры

&НаКлиенте
Процедура ПарольДубльПриИзменении(Элемент)
	ПроверитьПароли(ПарольДубль);
КонецПроцедуры

&НаКлиенте
Процедура ЛогинПриИзменении(Элемент)
	Если НЕ ОбщиеПроцедурыИФункцииКлиент.ПроверитьКорректностьСимволовЛогина(Логин) Тогда
		ДиалогиСПользователемКлиент.ПоказатьСообщениеПользователю("Логин (e-mail) содержит недопустимые символы");
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПроверитьЛогинВБазе(Юзер)	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УчетныеЗаписи.Логин КАК Логин
	               |ИЗ
	               |	РегистрСведений.УчетныеЗаписи КАК УчетныеЗаписи
	               |ГДЕ
	               |	УчетныеЗаписи.Логин = &Юзер";
	
	Запрос.УстановитьПараметр("Юзер", Юзер);
	РезультатЗапроса = Запрос.Выполнить();
	Возврат НЕ РезультатЗапроса.Пустой();	
КонецФункции

&НаСервере
Процедура ЗаписатьДанныеУчетнойЗаписи(НовыйЛогин, НовыйПароль, id_user)
	
	Попытка
		МенеджерЗаписи = РегистрыСведений.УчетныеЗаписи.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Логин = НовыйЛогин;
		МенеджерЗаписи.Пароль = НовыйПароль;
		МенеджерЗаписи.id_user = id_user;
		МенеджерЗаписи.Записать();
				
		Справочники.ПараметрыСистемы.УстановитьНовоеЗначениеПараметраСистемы(Справочники.ПараметрыСистемы.User, НовыйЛогин);
		Справочники.ПараметрыСистемы.УстановитьНовоеЗначениеПараметраСистемы(Справочники.ПараметрыСистемы.Password, НовыйПароль);
		Справочники.ПараметрыСистемы.УстановитьНовоеЗначениеПараметраСистемы(Справочники.ПараметрыСистемы.id_user, id_user);
		
	Исключение
		Ошибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ОбщиеПроцедурыИФункцииСервер.ЗаписатьЛоги(Ошибка);
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция УпаковатьУчетныеДанные(НовыйЛогин, НовыйПароль)
	Структура = Новый Структура("Логин, Пароль");
	Структура.Логин = XMLСтрока(Новый ХранилищеЗначения(НовыйЛогин));
	Структура.Пароль = XMLСтрока(Новый ХранилищеЗначения(НовыйПароль));
	Возврат Структура;	
КонецФункции
