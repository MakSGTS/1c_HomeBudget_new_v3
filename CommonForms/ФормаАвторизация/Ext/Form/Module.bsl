
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановкаВидимостиДоступностиЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Текст_АвторизацияНажатие(Элемент)
	Элементы.Группа2.ТекущаяСтраница = Элементы.Авторизация;
	УстановкаВидимостиДоступностиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура Текст_РегистрацияНажатие(Элемент)
	Элементы.Группа2.ТекущаяСтраница = Элементы.Регистрация;
	УстановкаВидимостиДоступностиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура Логин1ПриИзменении(Элемент)
	Если НЕ ОбщиеПроцедурыИФункцииКлиент.ПроверитьКорректностьСимволовЛогина(Логин) Тогда
		ДиалогиСПользователемКлиент.ПоказатьСообщениеПользователю("Логин (e-mail) содержит недопустимые символы");
	КонецЕсли;	
КонецПроцедуры

#Конецобласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура АвторизацияКоманда(Команда)
	
	ТекущаяУчетка = ОбщиеПроцедурыИФункцииСервер.ПолучитьУчетнуюЗапись();
	Если ТекущаяУчетка <> Неопределено Тогда
		ТекЛогин = ТекущаяУчетка.Логин;
		ТестСообщ = СтрШаблон("Вы уже авторизированы под учётной записью ""%1""", ТекЛогин);
		ДиалогиСПользователемКлиент.ПоказатьСообщениеПользователю(ТестСообщ);
		Возврат;
	КонецЕсли;
	
	Ответ = ВыполнитьАвторизациюНаСервере(Логин, Пароль);
	
	Если Не Ответ.Выполнено Тогда
		ТекстСообщ = "Не удалось авторизироваться на сервере. " + Символы.ПС + Ответ.Ошибка;
		ЛогированиеОшибокСервер.ЗаписатьОшибкуВЛоги(ТекстСообщ);
		ДиалогиСПользователемКлиент.ПоказатьСообщениеПользователю(ТекстСообщ);
	Иначе
		ДиалогиСПользователемКлиент.ПоказатьСообщениеПользователю("Авторизация выполнена успешно!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РегстрацияКоманда(Команда)
	
	ТекущаяУчетка = ОбщиеПроцедурыИФункцииСервер.ПолучитьУчетнуюЗапись();
	Если ТекущаяУчетка <> Неопределено Тогда
		ТекстСообщ = СтрШаблон("Вы уже зарегестрированы и авторизированы под учётной записью %1", ТекущаяУчетка.Логин);
		ДиалогиСПользователемКлиент.ПоказатьСообщениеПользователю(ТекстСообщ);
		Возврат;
	КонецЕсли;
	
	Если НЕ ОбщиеПроцедурыИФункцииКлиент.ПроверитьКорректностьСимволовЛогина(Логин) Тогда
		ДиалогиСПользователемКлиент.ПоказатьСообщениеПользователю("Логин (e-mail) содержит недопустимые символы");
		Возврат;
	КонецЕсли;
	
	Если Не ПроверитьПароли(Пароль) Тогда
		Возврат;
	КонецЕсли;
	
	Результат = ВыполнитьРегистрациюНаСервереДанных(Логин, Пароль);
	Если Результат.Выполнено Тогда
		ДиалогиСПользователемКлиент.ПоказатьСообщениеПользователю("Регистрация выполнена успешно!");
	Иначе
		Если Результат.Свойство("ЛогинУжеЗарегестрирован") Тогда
			ДиалогиСПользователемКлиент.ПоказатьСообщениеПользователю(Результат.Ошибка);
		Иначе
			ДиалогиСПользователемКлиент.ПоказатьСообщениеПользователю("Не удалось выполнить регистрацию пользователя... Попробуйте выполнить операцию позже");
			ЛогированиеОшибокСервер.ЗаписатьОшибкуВЛоги(Результат.Ошибка,,, ПредопределенноеЗначение("Перечисление.КритерииОшибок.Критическая"));			
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановкаВидимостиДоступностиЭлементов()
	Элементы.Текст_Авторизация.Доступность = Элементы.Группа2.ТекущаяСтраница <> Элементы.Авторизация;
	Элементы.Текст_Регистрация.Доступность = Элементы.Группа2.ТекущаяСтраница <> Элементы.Регистрация;
КонецПроцедуры

&НаКлиенте
Функция ПроверитьПароли(Пароль)
	Если ОбщиеПроцедурыИФункцииКлиент.ПроверитьКорректностьСимволовПароля(Пароль) Тогда
		УстановкаВидимостиДоступностиЭлементов();
		Возврат Истина;
	Иначе		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Пароль содержит запрещённые символы!"; //TODO: Сделать подсказку, какие симвоолы должны быть!
		Сообщение.Сообщить();
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ВыполнитьАвторизациюНаСервере(Логин, Пароль)
	ПараметрыСервиса = ПолучитьСтруктуруПараметров();
	ПараметрыСервиса.ПространствоИмен = "user_authorization";
	ПараметрыСервиса.ИмяСервиса = "UserAuthorization";
	ПараметрыСервиса.ИмяПортаСервиса = "UserAuthorizationSoap";
	ПараметрыСервиса.ИмяФайлаСервиса = "UserAuthorization.1cws";
	ПараметрыСервиса.ИмяПользователя = "Регистратор пользователей";//TODO: Другое имя пользователя?
	ПараметрыСервиса.Пароль = "hr65kl81";//?

	ХешПароль = ОбщиеПроцедурыИФункцииСервер.ХешироватьпарольФункции(Пароль);
	
	Авторизатор = РаботаСWebСервисами_Сервер.СформироватьСеансВебСервиса(ПараметрыСервиса);
	
	СтрокаОтвета = Авторизатор.Авторизация(Логин, ХешПароль);
	Результат = ОбщиеПроцедурыИФункцииСервер.ПолучитьСтруктуруИзСтрокиJSON(СтрокаОтвета);
	Если Результат.Выполнено Тогда
		ОбщиеПроцедурыИФункцииСервер.ЗарегестрироватьУчетнуюЗаписьВСистеме(Логин, ХешПароль, Результат.id_user);
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаСервере
Функция ВыполнитьРегистрациюНаСервереДанных(Логин, Пароль)
	
	ПараметрыСервиса = ПолучитьСтруктуруПараметров();
	ПараметрыСервиса.ПространствоИмен = "user_authorization";
	ПараметрыСервиса.ИмяСервиса = "UserAuthorization";
	ПараметрыСервиса.ИмяПортаСервиса = "UserAuthorizationSoap";
	ПараметрыСервиса.ИмяФайлаСервиса = "UserAuthorization.1cws";
	ПараметрыСервиса.ИмяПользователя = "Регистратор пользователей";
	ПараметрыСервиса.Пароль = "hr65kl81";

	ХешПароль = ОбщиеПроцедурыИФункцииСервер.ХешироватьпарольФункции(Пароль);
	
	Регистратор = РаботаСWebСервисами_Сервер.СформироватьСеансВебСервиса(ПараметрыСервиса);
	
	СтрокаОтвета = Регистратор.Регистрация(Логин, ХешПароль);
	Результат = ОбщиеПроцедурыИФункцииСервер.ПолучитьСтруктуруИзСтрокиJSON(СтрокаОтвета);
	
	Если Результат.Выполнено Тогда
		ОбщиеПроцедурыИФункцииСервер.ЗарегестрироватьУчетнуюЗаписьВСистеме(Логин, ХешПароль, Результат.id_user);
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьСтруктуруПараметров()
	ПараметрыСервиса = Новый Структура();
	ПараметрыСервиса.Вставить("ПространствоИмен");
	ПараметрыСервиса.Вставить("ИмяСервиса");
	ПараметрыСервиса.Вставить("ИмяПортаСервиса");
	ПараметрыСервиса.Вставить("ИмяФайлаСервиса");
	ПараметрыСервиса.Вставить("ИмяПользователя");
	ПараметрыСервиса.Вставить("Пароль");
	Возврат ПараметрыСервиса;
КонецФункции
#КонецОбласти
