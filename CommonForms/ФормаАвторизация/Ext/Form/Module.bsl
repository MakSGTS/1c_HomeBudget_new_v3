
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановкаВидимостиДоступностиЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Текст_АвторизацияНажатие(Элемент)
	Элементы.Группа2.ТекущаяСтраница = Элементы.Авторизация;
	УстановкаВидимостиДоступностиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура Текст_РегистрацияНажатие(Элемент)
	Элементы.Группа2.ТекущаяСтраница = Элементы.Регистрация;
	УстановкаВидимостиДоступностиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура Логин1ПриИзменении(Элемент)
	Если НЕ ОбщиеПроцедурыИФункцииКлиент.ПроверитьКорректностьСимволовЛогина(Логин) Тогда
		ДиалогиСПользователемКлиент.ПоказатьСообщениеПользователю("Логин (e-mail) содержит недопустимые символы");
	КонецЕсли;	
КонецПроцедуры

#Конецобласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура АвторизацияКоманда(Команда)
	ПараметрыСервиса = Новый Структура();
	ПараметрыСервиса.ИмяСервиса = "UserAuthorization";
	ПараметрыСервиса.ИмяПортаСервиса = "UserAuthorizationSoap";
	ПараметрыСервиса.ИмяФайлаСервиса = "UserAuthorization.1cws";
	ПараметрыСервиса.ИмяПользователя = "Регистратор";//TODO: Другое имя полбзователя?
	ПараметрыСервиса.Пароль = "";//?

	ХешПароль = ОбщиеПроцедурыИФункцииСервер.ХешироватьпарольФункции(Пароль);
	
	Авторизатор = СформироватьСеансВебСервиса(ПараметрыСервиса);
	
	Результат = Авторизатор.Авторизация(Логин, ХешПароль);
	
	Если Не Результат Тогда
		ТекстСообщ = "Не удалось авторизироваться на сервере. Возможно, указан не верный Логин или Пароль.";
		ЛогированиеОшибокСервер.ЗаписатьОшибкуВЛоги(ТекстСообщ);
		ДиалогиСПользователемКлиент.ПоказатьСообщениеПользователю(ТекстСообщ);
	Иначе
		//TODO: что делаем дальше? Пишем данные в регистр УчетныеЗаписи? Тогда нужен возврат id... !!!
		// Продумать, в каких случаях нужна будет авторизация, кроме случая чистовой установки/переустановки приложения
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РегстрацияКоманда(Команда)
	Если НЕ ОбщиеПроцедурыИФункцииКлиент.ПроверитьКорректностьСимволовЛогина(Логин) Тогда
		ДиалогиСПользователемКлиент.ПоказатьСообщениеПользователю("Логин (e-mail) содержит недопустимые символы");
		Возврат;
	КонецЕсли;
	
	Если Не ПроверитьПароли(Пароль) Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьРегистрациюНаСервереДанных(Логин, Пароль);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановкаВидимостиДоступностиЭлементов()
	Элементы.Текст_Авторизация.Доступность = Элементы.Группа2.ТекущаяСтраница <> Элементы.Авторизация;
	Элементы.Текст_Регистрация.Доступность = Элементы.Группа2.ТекущаяСтраница <> Элементы.Регистрация;
КонецПроцедуры

&НаКлиенте
Функция ПроверитьПароли(Пароль)
	Если ОбщиеПроцедурыИФункцииКлиент.ПроверитьКорректностьСимволовПароля(Пароль) Тогда
		УстановкаВидимостиДоступностиЭлементов();
		Возврат Истина;
	Иначе		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Пароль содержит запрещённые символы!"; //TODO: Сделать подсказку, какие симвоолы должны быть!
		Сообщение.Сообщить();
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ВыполнитьРегистрациюНаСервереДанных(Логин, Пароль)
	
	ПараметрыСервиса = Новый Структура();
	ПараметрыСервиса.ИмяСервиса = "UserAuthorization";
	ПараметрыСервиса.ИмяПортаСервиса = "UserAuthorizationSoap";
	ПараметрыСервиса.ИмяФайлаСервиса = "UserAuthorization.1cws";
	ПараметрыСервиса.ИмяПользователя = "Регистратор";
	ПараметрыСервиса.Пароль = "";

	ХешПароль = ОбщиеПроцедурыИФункцииСервер.ХешироватьпарольФункции(Пароль);
	
	//АдресСоединения = ПараметрыСерверов.ПолучитьАдресСервера();
	//ПространствоИмен = "localhost";
	//ИмяСервиса = "UserAuthorization";
	//ИмяПортаСервиса = "UserAuthorizationSoap";
	//АдресПодключения = СтрШаблон("http://%1/HB_Server/ws/UserAuthorization.1cws", АдресСоединения);
	//Регистратор = WSСсылки.АвторизацияНаСервереДанных(ПространствоИмен, ИмяСервиса, ИмяПортаСервиса,,, АдресПодключения);
	//Регистратор.Пользователь = "Регистратор"; //!!!
	
	Регистратор = СформироватьСеансВебСервиса(ПараметрыСервиса);
	
	Результат = Регистратор.Регистрация(Логин, ХешПароль); //TODO: здесь я долже получать XDTO-пакеты!!!
	
	Если Результат.Выполнено Тогда
		Ответ = РегистрыСведений.УчетныеЗаписи.ЗаписатьНовуюУчетнуюЗапись(Логин, Результат.id_user, ХешПароль);
		Возврат Ответ;	
	Иначе
		Возврат Результат.Ошибка;// TODO:
	КонецЕсли;

	
КонецФункции

// Сформировать сеанс веб сервиса.
// 
// Параметры:
//  ПараметрыСервиса	- Структура - 
//  *ИмяСервиса			- Строка
//  *ИмяПортаСервиса	- Строка
//  *ИмяФайлаСервиса	- Строка
//  *ИмяПользователя	- Строка
//  *Пароль				- Строка
// 
// Возвращаемое значение:  - 
//  
&НаСервере
Функция СформироватьСеансВебСервиса(ПараметрыСервиса) Экспорт
	АдресСоединения = ПараметрыСерверов.ПолучитьАдресСервера();
	ПространствоИмен = "localhost";
	ИмяСервиса = ПараметрыСервиса.ИмяСервиса;//"UserAuthorization";
	ИмяПортаСервиса = ПараметрыСервиса.ИмяПортаСервиса;//"UserAuthorizationSoap";
	АдресПодключения = СтрШаблон("http://%1/HB_Server/ws/%2", АдресСоединения, ПараметрыСервиса.ИмяФайлаСервиса);
	ВебСервис = WSСсылки.АвторизацияНаСервереДанных(ПространствоИмен, ИмяСервиса, ИмяПортаСервиса,,, АдресПодключения);
	ВебСервис.Пользователь = ПараметрыСервиса.Пользователь;//"Регистратор";
	
	Возврат ВебСервис;
КонецФункции

#КонецОбласти
